{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mununuribonjesi/Development/BookingApplication/Booking-Client/node_modules/expo-stripe-webview/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { WebView } from 'react-native-webview';\nimport * as React from 'react';\nvar jsCode = \"(function() {\\n  var originalPostMessage = window.postMessage;\\n\\n  var patchedPostMessage = function(message, targetOrigin, transfer) {\\n    originalPostMessage(message, targetOrigin, transfer);\\n  };\\n\\n  patchedPostMessage.toString = function() {\\n    return String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');\\n  };\\n\\n  window.postMessage = patchedPostMessage;\\n})();\";\n\nvar ExpoStripePurchase = function (_React$Component) {\n  _inherits(ExpoStripePurchase, _React$Component);\n\n  var _super = _createSuper(ExpoStripePurchase);\n\n  function ExpoStripePurchase() {\n    _classCallCheck(this, ExpoStripePurchase);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ExpoStripePurchase, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return React.createElement(WebView, {\n        originWhitelist: [\"*\"],\n        javaScriptEnabled: true,\n        scrollEnabled: false,\n        bounces: false,\n        injectedJavaScript: jsCode,\n        source: {\n          html: \"<script src=\\\"https://checkout.stripe.com/checkout.js\\\"></script>\\n            <script>\\n            var handler = StripeCheckout.configure({\\n            key: '\" + props.publicKey + \"',\\n            image: '\" + props.imageUrl + \"',\\n            locale: 'auto',\\n            token: function(token) {\\n                window.ReactNativeWebView.postMessage(token.id);\\n            },\\n            });\\n\\n            window.onload = function() {\\n            handler.open({\\n                name: 'SOTC',\\n                description: '\" + props.description + \"',\\n                image: '\" + props.imageUrl + \"',\\n                amount: \" + props.amount + \",\\n                currency: \" + props.currency + \",\\n                allowRememberMe: \" + props.allowRememberMe + \",\\n                email: '\" + props.email + \"',\\n                closed: function() {\\n                  window.ReactNativeWebView.postMessage(\\\"WINDOW_CLOSED\\\");\\n                }\\n            });\\n            };\\n            </script>\",\n          baseUrl: ''\n        },\n        onMessage: function onMessage(event) {\n          return event.nativeEvent.data === \"WINDOW_CLOSED\" ? props.onClose() : props.onPaymentSuccess(event.nativeEvent.data);\n        },\n        style: _objectSpread({\n          flex: 1\n        }, props.style),\n        scalesPageToFit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ExpoStripePurchase;\n}(React.Component);\n\nexport { ExpoStripePurchase as default };","map":{"version":3,"sources":["/Users/mununuribonjesi/Development/BookingApplication/Booking-Client/node_modules/expo-stripe-webview/index.tsx"],"names":["WebView","React","jsCode","ExpoStripePurchase","props","html","publicKey","imageUrl","description","amount","currency","allowRememberMe","email","baseUrl","event","nativeEvent","data","onClose","onPaymentSuccess","flex","style","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,sBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,MAAM,6YAAZ;;IA4BqBC,kB;;;;;;;;;;;;;6BACV;AACP,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,aACE,oBAAC,OAAD;AACE,QAAA,eAAe,EAAE,CAAC,GAAD,CADnB;AAEE,QAAA,iBAAiB,EAAE,IAFrB;AAGE,QAAA,aAAa,EAAE,KAHjB;AAIE,QAAA,OAAO,EAAE,KAJX;AAKE,QAAA,kBAAkB,EAAEF,MALtB;AAME,QAAA,MAAM,EAAE;AAAEG,UAAAA,IAAI,wKAGFD,KAAK,CAACE,SAHJ,gCAIAF,KAAK,CAACG,QAJN,uTAcUH,KAAK,CAACI,WAdhB,oCAeIJ,KAAK,CAACG,QAfV,oCAgBIH,KAAK,CAACK,MAhBV,qCAiBML,KAAK,CAACM,QAjBZ,4CAkBaN,KAAK,CAACO,eAlBnB,mCAmBIP,KAAK,CAACQ,KAnBV,qMAAN;AAyBQC,UAAAA,OAAO,EAAE;AAzBjB,SANV;AAgCE,QAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,iBAAgBA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,KAA2B,eAA3B,GAA6CZ,KAAK,CAACa,OAAN,EAA7C,GAA+Db,KAAK,CAACc,gBAAN,CAAuBJ,KAAK,CAACC,WAAN,CAAkBC,IAAzC,CAA/E;AAAA,SAhCb;AAiCE,QAAA,KAAK;AAAIG,UAAAA,IAAI,EAAE;AAAV,WAAgBf,KAAK,CAACgB,KAAtB,CAjCP;AAkCE,QAAA,eAAe,EAAE,IAlCnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAqCA;;;;EAxC4CnB,KAAK,CAACoB,S;;SAAjClB,kB","sourcesContent":["import { WebView } from 'react-native-webview';\nimport * as React from 'react';\n\nconst jsCode = `(function() {\n  var originalPostMessage = window.postMessage;\n\n  var patchedPostMessage = function(message, targetOrigin, transfer) {\n    originalPostMessage(message, targetOrigin, transfer);\n  };\n\n  patchedPostMessage.toString = function() {\n    return String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');\n  };\n\n  window.postMessage = patchedPostMessage;\n})();`;\n\ntype Props = {\n    publicKey: string;\n    storeName: string;\n    description: string;\n    imageUrl: string;\n    amount: number;\n    currency: string;\n    allowRememberMe: boolean;\n    email: string;\n    style?: object;\n    onClose: () => void;\n    onPaymentSuccess: (token: string) => void;\n}\n  \nexport default class ExpoStripePurchase extends React.Component<Props> {\n  render() {\n    const props = this.props;\n    return (\n      <WebView\n        originWhitelist={[\"*\"]}\n        javaScriptEnabled={true}\n        scrollEnabled={false}\n        bounces={false}\n        injectedJavaScript={jsCode}\n        source={{ html: `<script src=\"https://checkout.stripe.com/checkout.js\"></script>\n            <script>\n            var handler = StripeCheckout.configure({\n            key: '${props.publicKey}',\n            image: '${props.imageUrl}',\n            locale: 'auto',\n            token: function(token) {\n                window.ReactNativeWebView.postMessage(token.id);\n            },\n            });\n\n            window.onload = function() {\n            handler.open({\n                name: 'SOTC',\n                description: '${props.description}',\n                image: '${props.imageUrl}',\n                amount: ${props.amount},\n                currency: ${props.currency},\n                allowRememberMe: ${props.allowRememberMe},\n                email: '${props.email}',\n                closed: function() {\n                  window.ReactNativeWebView.postMessage(\"WINDOW_CLOSED\");\n                }\n            });\n            };\n            </script>`, baseUrl: ''}}\n        onMessage={(event: any) => event.nativeEvent.data === \"WINDOW_CLOSED\" ? props.onClose() : props.onPaymentSuccess(event.nativeEvent.data)}\n        style={{ flex: 1, ...props.style }}\n        scalesPageToFit={true}\n    />\n  )}\n}\n"]},"metadata":{},"sourceType":"module"}